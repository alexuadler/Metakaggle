library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
makeMatrix <- function(x = matrix()) {
## A function is caled to cache the matrix
matInv<-NULL
# the variable that will hold the inverse matrix is cleared
setMat<-function(y){  # This function seems to be for debugging; it isn't really called anywhere else
x <<- y
matInv <<- NULL
# the variable that will hold the inverse matrix is cleared
}
getMat<-function() x
# 'gets' the matrix from the makeMatrix function call
setInverse<-function(solve) {matInv<<-solve}
# solves (aka finds the inverse of) the matrix and 'sets' it in a safe place
getInverse<-function() matInv
# 'gets' the inverse matrix that was just solved above
list(setMat=setMat,
getMat=getMat,
setInverse=setInverse,
getInverse=getInverse)
# store all of the setters and getters computed above to be called by cacheInverse()
}
cacheInverse <- function(x, ...) {
matInv<-x$getInverse() # stores the inverse matrix in matInv (if it exists)
if(!is.null(matInv)){ # if the inverse matrix is cached, this if statement tells the user it is being retreived from the cache
message("retreiving cached matrix...")
return(matInv) #returns the cached inverse matrix
}
# the code below calculates the inverse matrix if it does not exist in the cache
myMat<-x$getMat() # loads the original matrix from the list created in makeMatrix
matInv<-solve(myMat, ...) # solves the inverse of the matrix
x$setInverse(matInv)
matInv # returns the inverse matrix
}
theMatrix<-makeMatrix(matrix(c(2,3,2,2),2,2))
theMatrix$setInverse()
theMatrix$setInverse(matInv)
cacheInverse(theMatrix)
theMatrix$setInverse(matInv)
myMat
theMatrix$getMat
cacheInverse(theMatrix)
makeMatrix(matrix(c(2,3,2,2),2,2))
library(datasets)
data(iris)
?iris
Sepal.Length
iris(Sepal.Length)
iris$Sepal.Length
mean(iris$Sepal.Length)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars$mpg
mtcars$cyl
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
debug(ls)
ls
ls
?ls
cd
asf
?ls
ls
library(datasets)
mtcars
y<-x
y<-10
mtcars$mpg
ls
ls(y)
debug(ls)
ls(y)
q
library(datasets)
data(iris)
apply(iris[, 1:4], 2, mean)
?apply
library(datasets)
data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
debugonce(ls)
ls
iris
with(iris, tapply(Species, Sepal.Length, mean))
with(iris, tapply(Species, Sepal.Length, mean,na.rm=TRUE))
?tapply
setwd("~/GitHub/NYCDSA/Lecture/BostonHousing")
library(MASS)
data(Boston)
head(Boston)
?corrplot
?corplot
?corrPlot
?cor
library(car)
?scatterplotMatrix
scatterplotMatrix(medv ~.)
scatterplotMatrix(medv ~ .)
scatterplotMatrix(y ~ .)
scatterplotMatrix(data=Boston, formula=medv ~ .)
scatterplotMatrix(data=Boston, formula=y ~ .)
scatterplotMatrix(data=Boston, formula= ~ .)
scatterplotMatrix(data=Boston, formula= ~ medv + lstat + black + tax + age)
scatterplotMatrix(data=Boston, ~ medv + lstat + black + tax + age)
scatterplotMatrix(data=Boston, ~ medv + lstat + tax + age)
fit<-lm(medv ~ lstat, data=Boston)
summary(fit)
plot(fit)
plot(fit)
plot(fit)[2]
plot(fit)
?boxCox
boxCox(fit)
boxCox(medv ~ .,data=Boston)
fit2<-lm(log(medv) ~ lstat, data=Boston)
summary(fit)
plot(fit2)
plot(fit2)
boxCox(medv ~ .,data=Boston)
fit2<-lm(log(medv) ~ ., data=Boston)
summary(fit2)
?cor
summary(fit2)
fit2<-lm(log(medv) ~ lstat, data=Boston)
summary(fit2)
fit<-lm(medv ~ ., data=Boston)
summary(fit)
plot(fit)
splom(plot(fit))
library(lattice)
splom(plot(fit))
fit<-lm(medv ~ ., data=Boston)
summary(fit)
plot(fit)
boxCox(medv ~ .,data=Boston)
cor()
fit2<-lm(log(medv) ~ ., data=Boston)
vif(fit2)
?vif
?update
update(fit2,-tax)
update(lm(log(medv) ~ ., data=Boston),-tax)
fit2<-lm(log(medv) ~ . -tax, data=Boston)
fit2<-lm(log(medv) ~ ., data=Boston)
vif(fit2)
fit3<-lm(log(medv) ~ . -tax, data=Boston)
vif(fit3)
summary(fit3)
fit<-lm(medv ~ ., data=Boston)
summary(fit)
boxCox(medv ~ . -age,data=Boston)
fit3<-lm(log(medv) ~ . -age -tax, data=Boston)
summary(fit3)
fit2<-lm(log(medv) ~ . -age, data=Boston)
vif(fit2)
fit3<-lm(log(medv) ~ . -age -tax -zn -indus, data=Boston)
fit4<-lm(log(medv) ~ . -age -tax -zn -indus, data=Boston)
summary(fit4)
plot(fit4)
?predict
predict(fit4)
summary(fit4)
fitted<-fit4$fitted
cbind(data[highp, 1:2], fit=exp(fitted[highp]))
highp<-which.max(fit4$resid)
lowp<-which.min(fit4$resid)
cbind(data[highp, 1:2], fit=exp(fitted[highp]))
cbind(Boston[highp, 1:2], fit=exp(fitted[highp]))
head(Boston)
cbind(Boston[highp, 13:14], fit=exp(fitted[highp]))
cbind(Boston[lowp, 13:14], fit=exp(fitted[lowp]))
summary(fit4)
summary(fit)
anova(fit4,fit)
fit2<-lm(log(medv) ~ . -age, data=Boston)
vif(fit2)
fit3<-lm(log(medv) ~ . -age -tax -nox -dis -indus, data=Boston)
fit3<-lm(log(medv) ~ . -age -tax -nox -dis -indus, data=Boston)
summary(fit3)
fit4<-lm(log(medv) ~ . -age -tax -nox -dis -indus -zn -rad, data=Boston)
summary(fit4)
fitted<-fit4$fitted
highp<-which.max(fit4$resid)
lowp<-which.min(fit4$resid)
cbind(Boston[highp, 13:14], fit=exp(fitted[highp]))
cbind(Boston[lowp, 13:14], fit=exp(fitted[lowp]))
anova(fit4,fit)
vif(fit4)
script <- getURL("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard")
library(RCurl)
library(XML)
script <- getURL("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard")
doc <- htmlParse(script)
?html_nodes
library(rvest)
?html_nodes
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes(".scores")
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes("td:nth-child(4)")
head(axaSite)
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes("td:nth-child(4) .scores")
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes("td, .scores")
head(axaSite)
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes("td:nth-child(4) , .score")
head(axaSite)
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes("td:nth-child(4) , .score, abbr")
head(axaSite)
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes("td:nth-child(4) , .score, name")
head(axaSite)
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes("td:nth-child(4) , .score, .abbr")
head(axaSite)
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes("td:nth-child(4) , .abbr,.score")
head(axaSite)
xmlValue(axaSite)
xmlValue(axaSite[1])
xmlValue(axaSite[[1]][1])
xmlValue(axaSite[[1]])
xmlValue(axaSite[[2]])
xmlValue(axaSite[[3]])
xmlValue(axaSite[[2]])
xmlValue(axaSite[1][[2]])
xmlValue(axaSite[[2]][1])
xmlValue(axaSite[[4]])
xmlValue(axaSite[[6]])
xmlValue(axaSite[[3]])
xmlValue(axaSite[[5]])
xmlValue(axaSite[[1,1]])
class(xmlValue(axaSite[[4]]))
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes("td:nth-child(4) , .abbr")
xmlValue(axaSite[[3]])
xmlValue(axaSite[[4]])
xmlValue(axaSite)
lapply(axaSite,xmlValue)
?xmlValue
lapply(axaSite,function(x) xmlValue(x,trim=T))
head(axaSite)
lapply(axaSite,function(x) xmlValue(x,trim=T))
unlist(lapply(axaSite,function(x) xmlValue(x,trim=T)))
as.numeric(unlist(lapply(axaSite,function(x) xmlValue(x,trim=T))))
qplot(currentPL)
library(ggplot)
library(ggplot2)
qplot(currentPL)
u
currentPL<-as.numeric(unlist(lapply(axaSite,function(x) xmlValue(x,trim=T))))
qplot(currentPL)
qplot(currentPL,binwidth=1)
qplot(currentPL,binwidth=100)
qplot(currentPL)
qplot(currentPL,binwidth=0.1)
qplot(currentPL,binwidth=0.01)
qplot(currentPL,binwidth=0.01,geom="histogram")
qplot(currentPL,binwidth=0.02,geom="histogram")
qplot(currentPL,binwidth=0.02,geom="histogram")+xlim(0.52)
qplot(currentPL,binwidth=0.02,geom="histogram")+xlim(c(0.52,1))
qplot(currentPL,binwidth=0.01,geom="histogram")+xlim(c(0.52,1))
qplot(currentPL,binwidth=0.005,geom="histogram")+xlim(c(0.52,1))
qplot(currentPL,binwidth=0.005,geom="histogram")+xlim(c(0.52,1))+geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal'))
qplot(currentPL,binwidth=0.005,geom="histogram")+xlim(c(0.52,1))+
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal'))+
geom_vline(x=myScore)
myScore<- 0.71625
qplot(currentPL,binwidth=0.005,geom="histogram")+xlim(c(0.52,1))+
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal'))+
geom_vline(x=myScore)
qplot(currentPL,binwidth=0.005,geom="histogram")+xlim(c(0.52,1))+
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
geom_vline(x=myScore)
qplot(currentPL,binwidth=0.01,geom="histogram")+xlim(c(0.52,1))+
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
geom_vline(x=myScore,color=)
qplot(currentPL,binwidth=0.01,geom="histogram")+xlim(c(0.52,1))+
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
geom_vline(x=myScore,color="blue")
qplot(currentPL,binwidth=0.01,geom="histogram")+xlim(c(0.52,1))+
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
geom_vline(x=myScore,color="blue")+theme_bw()
myScore<- c(0.71625,
0.72)
axaSite<-html("http://www.kaggle.com/c/axa-driver-telematics-analysis/leaderboard") %>%
html_nodes("td:nth-child(4) , .abbr")
currentPL<-as.numeric(unlist(lapply(axaSite,function(x) xmlValue(x,trim=T))))
qplot(currentPL,binwidth=0.01,geom="histogram")+xlim(c(0.52,1))+
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
geom_vline(x=myScore,color="blue")+theme_bw()+theme(legend.position="none")
qplot(currentPL,binwidth=0.01,geom="histogram")+xlim(c(0.52,1))+
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
geom_vline(x=myScore,color="blue")+theme_bw()+theme(legend.position="none") +
geom_vline(x=0.66,color="red",linetype=2)
qplot(currentPL,binwidth=0.01,geom="histogram")+xlim(c(0.52,1))+
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density')+
geom_vline(x=myScore,color="blue")+theme_bw()+theme(legend.position="none")+
geom_vline(x=0.66,color="red",linetype=2)+
xlab("Public Leaderboard Score (Area under ROC)")+
ylab("Count of teams at that score")
historicalStandings<-read.csv("http://www.kaggle.com/c/4031/publicleaderboarddata.zip")
historicalStandings
setwd("~/GitHub/NYCDSA/Personal Projects/KaggleMeta")
download.file("http://www.kaggle.com/c/4031/publicleaderboarddata.zip",destfile="axaPLleaderboard.zip",method="curl")
?unzip
kagglePL<-"http://www.kaggle.com/c/4031/publicleaderboarddata.zip"
outputFile<-"axaPLleaderboard.zip"
download.file(kagglePL,destfile=outputFile,method="curl")
unzip(outputFile)
ls()
list.files()
unzip(outputFile)
warnings()
unzip("axaPLleaderboard.zip")
unz("blah",outputFile)
unzip("axaPLleaderboard.zip")
unzip("axaPLleaderboard")
download.file(kagglePL,destfile=outputFile,method="wb")
download.file(kagglePL,destfile=outputFile,method="wget")
download.file(kagglePL,destfile=outputFile,method="auto")
download.file(kagglePL,destfile=outputFile,method="curl",mode="wb")
outputFile<-"axaPLleaderboard.csv"
download.file(kagglePL,destfile=outputFile,method="curl",mode="wb")
historicPL<-read.csv(outputFile,stringsAsFactors=F)
historicPL<-read.csv(outputFile,stringsAsFactors=F)
historicPL
outputFile<-"axaPLleaderboard.zip"
kagglePL<-"http://www.kaggle.com/c/4031/publicleaderboarddata.zip"
download.file(kagglePL,destfile=outputFile,method="curl",mode="wb")
download.file(kagglePL,destfile=outputFile,method="curl",mode="sef")
?download.file
download.file(kagglePL,destfile=outputFile,method="internal",mode="wb")
download.file(kagglePL,destfile=outputFile,method="curl")
outputFile<-"axaPL.zip"
download.file(kagglePL,destfile=outputFile,method="curl")
historicPL<-read.csv(outputFile,stringsAsFactors=F)
unzip(outputFile)
outputCSV<-"axa.csv"
